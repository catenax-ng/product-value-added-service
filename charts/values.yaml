# Default values for vas.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  registry: ghcr.io
  repository: ghcr.io/catenax-ng/product-value-added-service
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "main"

appName: vas-country-risk-backend


imagePullSecrets: [ ]

podAnnotations: { }

podSecurityContext:
  fsGroup: 2000

#Spring profiles under which the application should run
springProfiles:
  - dev

# Following Catena-X Helm Best Practices @url: https://catenax-ng.github.io/docs/kubernetes-basics/helm
# @url: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
securityContext:
  allowPrivilegeEscalation: false
  runAsNonRoot: true
  runAsUser: 10001
  runAsGroup: 3000
  capabilities:
    drop:
      - ALL

service:
  type: ClusterIP
  port: 8080


autoscaling:
  enabled: false

ingress:
  className: nginx
  enabled: true



# Following Catena-X Helm Best Practices @url: https://catenax-ng.github.io/docs/kubernetes-basics/helm
# @url: https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-resource-requests-and-limits
resources:
  limits:
    cpu: 800m
    memory: 2Gi
  requests:
    cpu: 300m
    memory: 1Gi



nodeSelector: { }

tolerations: [ ]

# Following Catena-X Helm Best Practices @url: https://catenax-ng.github.io/docs/kubernetes-basics/helm
# @url: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: DoesNotExist
          topologyKey: kubernetes.io/hostname

# Following Catena-X Helm Best Practices @url: https://catenax-ng.github.io/docs/kubernetes-basics/helm
# @url: https://github.com/helm/charts/blob/master/stable/nginx-ingress/values.yaml#L210
livenessProbe:
  failureThreshold: 3
  initialDelaySeconds: 60
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1
  path: /management/health/liveness
  port: 8080
readinessProbe:
  failureThreshold: 3
  initialDelaySeconds: 60
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1
  path: /management/health/readiness
  port: 8080

applicationSecret:
  enabled: true
  clientSecret: <path:value-added-service/data/country-risk/dev/keycloak#client-secret>
  clientId: <path:value-added-service/data/country-risk/dev/keycloak#client-id>

configmap:
  # Specifies whether a configmap should be created
  create: true



elastic:
  enabled: false
  security:
    tls:
      restEncryption: false

postgres:
  enabled: true
  auth:
    database: vas
    username: vas
  ingress:
    className: nginx
    enabled: true
  appName: vas-country-risk-postgres
  environment: dev
  service:
    type: ClusterIP
    port: 5432

pgadmin4:
  secret:
    path: value-added-service/data/country-risk/dev/pgadmin4
  env:
    email: vas@catena-x.net
  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      kubernetes.io/ingress.class: nginx